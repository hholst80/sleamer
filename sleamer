# vi: ft=python et ts=4 sw=4

import yaml
import argparse

class SlideDec:
    def __init__(self, filename=None):
        self.page = None
        self._documents = []
        if filename is not None:
            self.load(filename)

    def load(self, filename):
        with open(filename, 'r') as stream:
            documents = yaml.load_all(stream)
            self._documents = [ doc for doc in documents ]
            if self.page is None:
                self.page = 1

    def __len__(self):
        return len(self._documents)

    def header(self):
        assert len(self._documents) >= 1
        return self._documents[0]

    def document(self, page=None):
        if page is None:
            page = self.page()
        slide = self.slide(page)

    def show(self, page=None):
        page = page or self.page(page) 
        subprocess.Popen('plugins/{plugin} {xid}'.format(plugin=plugin, xid=xid))
      

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-e', required=True)
    parser.add_argument('slides')
    args = parser.parse_args()
    slides = SlideDeck(args.slides)
    
    
    

if __name__ == '__main__':
    main()
